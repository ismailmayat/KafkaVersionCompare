@using KafkaVersionCompare.Model
@model KafkaVersionCompare.Model.CpComparison
@{
    var fromVersion = Model.From;
    var toVersion = Model.To;
    var releases = Model.Releases;
}

@if (fromVersion != null && toVersion != null && fromVersion < toVersion)
{
    
    var selectedReleases = new List<CpRelease>();
    List<CpRelease.Section> uniqueSections;
    
    foreach (var release in  releases.OrderByDescending(x => x.Version).Where(release => release.Version != fromVersion && (release.Version >= fromVersion) && (release.Version <= toVersion)))
    {
        var foundRelease = releases.FirstOrDefault(x => x.Version == release.Version);

        if (foundRelease == null)
        {
            continue;
        }

        selectedReleases.Add(foundRelease);
        
    }
    uniqueSections = selectedReleases
        .SelectMany(cpRelease => cpRelease.Sections)
        .GroupBy(section => section.SectionTitle)
        .Select(group => group.First())
        .ToList();
    
    <div class="col-sm-12 statuses">
        @{
                        foreach (var section in uniqueSections)
                        {
                            var matchingSections = selectedReleases
                                .Where(cpRelease =>
                                    cpRelease.Sections.Any(s =>
                                        s.SectionTitle == section.SectionTitle)
                                ).ToList();
                            
                            <h3>@(section.SectionTitle)</h3>
                            <table>
                                <tr>
                                    <th>
                                        Version     
                                    </th>
                                </tr>
                                @foreach (var item in matchingSections)
                                {
                                    <tr>
                                        <td>@(item.Version) <br/>
                                            @Html.Raw(item.Sections.Where(x=>x.SectionTitle==section.SectionTitle).First().SectionBody)
                                            </td>
                                    </tr>
                                }
                            </table>                           
                        }
                    }
    </div>
}

@if(fromVersion > toVersion)
{
    <p class="error">Can't compare versions that are equal to each other or where the "to" is lower than the "from".</p>
}